name: Build, test and deploy code

on:
  push:
    branches:
      - "deploy"
      - "main"
  pull_request:
    branches:
      - "deploy"
      - "main"

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DATABASE_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Installing python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: create virtual environment
        run: cd server && python -m venv venv
      - name: activate virtual environment
        run: cd server && source venv/bin/activate
      - name: update pip
        run: cd server && python -m pip install --upgrade pip
      - name: Installing dependencies
        run: cd server && pip install -r requirements.txt

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Running tests
        run: |
          cd server
          pip install pytest
          pytest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: testing
    permissions: # Required if github_deployment is set to true.
      deployments: write
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3
      - name: Trigger deployment
        uses: sws2apps/render-deployment@main #consider using pin for dependabot auto update
        with:
          serviceId: ${{ secrets.RENDER_SERVICE_ID }}
          apiKey: ${{ secrets.RENDER_API_KEY }}
          multipleDeployment: false #optional, default true